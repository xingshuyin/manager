"""
Django settings for manager project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import pymysql

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-1wxpl$rl+w+$n1vlv^r4buuh5f4396qh8310$i9yq4gm53zpgl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'index',
    'graph',
    'job',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'manager.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'manager.wsgi.application'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'manager',
        'HOST': 'localhost',
        'PORT': '3306',
        'USER':'root',
        'PASSWORD': '123456',
    }
}
# DRF配置信息
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (  # 验证
        'rest_framework.authentication.BasicAuthentication',  # 需要登录,用于测试
        'rest_framework.authentication.SessionAuthentication',  #
    ),
    'DEFAULT_PERMISSION_CLASSES': (  # 权限(全局)
        'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.AllowAny',
    )
}

# my_db = pymysql.connect(host='47.104.78.62', user='root', port=3306, password='111111', db='job', charset='utf8')
# cursor = my_db.cursor()
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, "static")  # python manage.py collectstatic 部署时执行
# 生产环境必须配置指定静态文件位置, 收集就会把STATICFILES_DIRS里的,和app.static里的,都复制到STATIC_ROOT里
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# ASGI_APPLICATION = "manager.asgi.application"  # asgi应用位置,可用于channels的get_default_application获取app位置
# CHANNEL_LAYERS = {  # channels通道,用于不通实例之间的通信
#     'default': {
#         'BACKEND': 'channels_redis.core.RedisChannelLayer',  # 使用redis后台, 用与存储消息
#         'CONFIG': {
#             "hosts": ["redis://127.0.0.1:6379/0"],
#         },
#     },
# }

CHANNEL_LAYERS = {  # 本地开发调试使用
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}